{"ast":null,"code":"import { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LoginComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r1);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(router) {\n      this.router = router;\n      this.username = '';\n      this.password = '';\n      this.selectedRole = '';\n      this.roles = ['Admin', 'User', 'Guest'];\n      this.users = [{\n        username: 'admin',\n        password: 'admin123',\n        role: 'Admin'\n      }, {\n        username: 'user',\n        password: 'user123',\n        role: 'User'\n      }, {\n        username: 'guest',\n        password: 'guest123',\n        role: 'Guest'\n      }];\n    }\n    login() {\n      const user = this.users.find(u => u.username === this.username && u.password === this.password && u.role === this.selectedRole);\n      if (user) {\n        this.router.navigate(['/dashboard']);\n      } else {\n        alert('Invalid credentials');\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 9,\n        vars: 4,\n        consts: [[1, \"login-container\"], [\"id\", \"username\", \"type\", \"text\", \"placeholder\", \"Username\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [3, \"value\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Login\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"input\", 1);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_3_listener($event) {\n              return ctx.username = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"input\", 2);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_4_listener($event) {\n              return ctx.password = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"select\", 3);\n            i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_select_ngModelChange_5_listener($event) {\n              return ctx.selectedRole = $event;\n            });\n            i0.ɵɵtemplate(6, LoginComponent_option_6_Template, 2, 2, \"option\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"button\", 5);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_7_listener() {\n              return ctx.login();\n            });\n            i0.ɵɵtext(8, \"Login\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngModel\", ctx.username);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngModel\", ctx.password);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngModel\", ctx.selectedRole);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngForOf\", ctx.roles);\n          }\n        },\n        dependencies: [i2.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n        styles: [\".login-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh;background:url(/assets/images/Parking1.jpg) no-repeat center center;background-color:#f4f4f4}h2[_ngcontent-%COMP%]{font-size:24px;margin-bottom:20px;color:#333}input[_ngcontent-%COMP%], select[_ngcontent-%COMP%]{width:80%;max-width:300px;padding:10px;margin:10px 0;border:1px solid #ccc;border-radius:5px;font-size:16px}button[_ngcontent-%COMP%]{width:80%;max-width:300px;padding:10px;background-color:#007bff;color:#fff;border:none;border-radius:5px;font-size:16px;cursor:pointer}button[_ngcontent-%COMP%]:hover{background-color:#0056b3}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}