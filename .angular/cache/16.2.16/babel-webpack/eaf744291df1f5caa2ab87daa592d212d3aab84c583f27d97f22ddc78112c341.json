{"ast":null,"code":"import { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"available\": a0,\n    \"reserved\": a1,\n    \"booked\": a2\n  };\n};\nfunction ParkingStatusComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function ParkingStatusComponent_div_4_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const slot_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.bookSlot(slot_r1));\n    });\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const slot_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(4, _c0, slot_r1.status === \"Available\", slot_r1.status === \"Reserved\", slot_r1.status === \"Booked\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Slot \", slot_r1.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Vehicle: \", slot_r1.vehicleNumber || \"None\", \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Status: \", slot_r1.status, \"\");\n  }\n}\nexport let ParkingStatusComponent = /*#__PURE__*/(() => {\n  class ParkingStatusComponent {\n    constructor(router) {\n      this.router = router;\n      this.parkingSlots = Array.from({\n        length: 30\n      }, (_, index) => ({\n        id: index + 1,\n        vehicleNumber: index % 3 === 0 ? `MH12AB${index + 100}` : null,\n        status: index % 3 === 0 ? 'Booked' : index % 3 === 1 ? 'Reserved' : 'Available'\n      }));\n    }\n    bookSlot(slot) {\n      if (slot.status === 'Available') {\n        alert(`You need to log in to book Slot ${slot.id}`);\n        this.router.navigate(['/login']);\n      } else {\n        alert(`Slot ${slot.id} is already ${slot.status}`);\n      }\n    }\n    static {\n      this.ɵfac = function ParkingStatusComponent_Factory(t) {\n        return new (t || ParkingStatusComponent)(i0.ɵɵdirectiveInject(i1.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ParkingStatusComponent,\n        selectors: [[\"app-parking-status\"]],\n        decls: 5,\n        vars: 1,\n        consts: [[1, \"parking-status-container\"], [1, \"slots\"], [\"class\", \"slot\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"slot\", 3, \"ngClass\", \"click\"]],\n        template: function ParkingStatusComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Parking Slots\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 1);\n            i0.ɵɵtemplate(4, ParkingStatusComponent_div_4_Template, 7, 8, \"div\", 2);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", ctx.parkingSlots);\n          }\n        },\n        dependencies: [i2.NgClass, i2.NgForOf],\n        styles: [\".parking-status-container[_ngcontent-%COMP%]{padding:20px;text-align:center}h2[_ngcontent-%COMP%]{font-size:24px;margin-bottom:20px;color:#fff}.slots[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px;justify-content:center}.slot[_ngcontent-%COMP%]{width:120px;height:120px;border-radius:5px;text-align:center;line-height:1.5;font-size:14px;font-weight:700;color:#fff;padding:10px;cursor:pointer}.slot.available[_ngcontent-%COMP%]{background-color:green}.slot.reserved[_ngcontent-%COMP%]{background-color:#ff0;color:#000}.slot.booked[_ngcontent-%COMP%]{background-color:red}\"]\n      });\n    }\n  }\n  return ParkingStatusComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}